Sr() : Sr
	the module export.  
		The Strontium function is a Sr object, but called as a function,
		it also returns a new Strontium object.

Sr : {
	unit(string) : Unit
	unit(def) : BaseUnit
		def : {
			name : string,
			type : string,
			symbol : string,
			scale : number
		}
	derivedUnit(def) : DerivedUnit
		def : {
			name : string,
			units : array<desc>,
			symbol : string,
			scale : number
		}
		desc : {
			unit : string | Unit
			power : number
		}
	quantity(UnitExpression, number) : Quantity
	convert(Quantity, UnitExpression|System) : Quantity
}

--------------------------------

Unit
	name() : string
	symbol() : string
	scale() : number

	expression() : UnitExpression
	dimensions() : Dimensions
	isBaseUnit() : bool

	toString() : string

BaseUnit : Unit
	type() : string

DerivedUnit : Unit
	expression() : UnitExpression

Term:
	power() : number
	unit() : Unit

UnitExpression:
	terms() : Term[]
	mult(UnitExpression) : UnitExpression
	div(UnitExpression) : UnitExpression
	pow(number) : UnitExpression
	simplify() : UnitExpression

Quantity
	value() : number
	//precision() : number
	units() : UnitExpression

	convertTo(Unit) : Quantity

	plus(Quantity) : Quantity
	minus(Quantity) : Quantity
	times(Quantity) : Quantity
	dividedBy(Quantity) : Quantity

	toString() : string
	
Dimensions
	get(number) : number
	size() : number
	equals(Dimensions) : bool
	
	add(Dimensions) : Dimensions
	mult(Dimensions) : Dimensions
